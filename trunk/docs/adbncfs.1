.TH ADBNCFS "1" "1. December 2015" "ADBNCFS version 0.9.1" "User Commands"
.SH NAME
ADBNCFS \- filesystem client based on android adb and netcat
.SH SYNOPSIS
.SS requirements
\fBadb(1)\fR must be installed on your host and busybox must be installed on your android device.
.SS mounting
.TP
\fBadbncfs \fBmountpoint\fP [\fIoptions\fP]
.SS unmounting
.TP
\fBfusermount \-u mountpoint\fP
.SH DESCRIPTION
ADBNCFS (Android Debug Bridge via NetCat FileSystem) is a filesystem
client for Linux (and other operating systems with a FUSE implementation,
such as Mac OS X or FreeBSD) capable of operating on files on a android
device using NetCat on the android device. On the local computer where the
ADBNCFS is mounted, the implementation makes use of the FUSE (Filesystem in
Userspace) kernel module. The practical effect of this is that the end user
can seamlessly interact with android files being served over NetCat
just as if they were local files on his/her computer. On the android device
the bash shell is used.
.PP
.SH OPTIONS
.SS "generell options:"
.TP
\fB\-h\fR   \fB\-\-help\fR print help
.TP
\fB\-V\fR   \fB\-\-version\fR print version
.PP
.SS "FUSE options:"
.TP
\fB\-d\fR   \fB\-o\fR debug
enable debug output (implies \fB\-f\fR)
.TP
\fB\-f\fR
foreground operation
.TP
\fB\-s\fR
disable multi\-threaded operation
.TP
\fB\-o\fR allow_other
allow access to other users
.TP
\fB\-o\fR allow_root
allow access to root
.TP
\fB\-o\fR nonempty
allow mounts over non\-empty file/dir
.HP
\fB\-o\fR default_permissions
enable permission checking by kernel
.TP
\fB\-o\fR fsname=NAME
set filesystem name
.TP
\fB\-o\fR subtype=NAME
set filesystem type
.TP
\fB\-o\fR large_read
issue large read requests (2.4 only)
.TP
\fB\-o\fR max_read=N
set maximum size of read requests
.TP
\fB\-o\fR hard_remove
immediate removal (don't hide files)
.TP
\fB\-o\fR use_ino
let filesystem set inode numbers
.TP
\fB\-o\fR readdir_ino
try to fill in d_ino in readdir
.TP
\fB\-o\fR direct_io
use direct I/O
.TP
\fB\-o\fR kernel_cache
cache files in kernel
.TP
\fB\-o\fR [no]auto_cache
enable caching based on modification times
.TP
\fB\-o\fR umask=M
set file permissions (octal)
.TP
\fB\-o\fR uid=N
set file owner (number)
.TP
\fB\-o\fR gid=N
set file group (number)
.TP
\fB\-o\fR entry_timeout=T
cache timeout for names (1.0s)
.TP
\fB\-o\fR negative_timeout=T
cache timeout for deleted names (0.0s)
.TP
\fB\-o\fR attr_timeout=T
cache timeout for attributes (1.0s)
.TP
\fB\-o\fR ac_attr_timeout=T
auto cache timeout for attributes (attr_timeout)
.TP
\fB\-o\fR intr
allow requests to be interrupted
.TP
\fB\-o\fR intr_signal=NUM
signal to send on interrupt (10)
.TP
\fB\-o\fR modules=M1[:M2...]
names of modules to push onto filesystem stack
.TP
\fB\-o\fR max_write=N
set maximum size of write requests
.TP
\fB\-o\fR max_readahead=N
set maximum readahead
.TP
\fB\-o\fR async_read
perform reads asynchronously (default)
.TP
\fB\-o\fR sync_read
perform reads synchronously
.SS "Module options:"
.TP
[subdir]
.TP
\fB\-o\fR subdir=DIR
prepend this directory to all paths (mandatory)
.TP
\fB\-o\fR [no]rellinks
transform absolute symlinks to relative
.TP
[iconv]
.TP
\fB\-o\fR from_code=CHARSET
original encoding of file names (default: UTF-8)
.TP
\fB\-o\fR to_code=CHARSET
new encoding of the file names (default: ISO-8859-2)
.PD
.SH HOMEPAGE
More information about adbncfs can be found at <\fIhhttp://adbncfs.sourceforge.net/api/html/\fR>.

.SH "AUTHORS"
.LP
ADBNCFS has been written by Werner JÃ¤ger.
.SH "SEE ALSO"
.BR adb (1),
.BR fusermount (1)


